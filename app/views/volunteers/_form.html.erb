<div class="well">
  <%= simple_nested_form_for(@volunteer, default_form_options) do |f| %>
      <%= show_simple_base_errors(f) %>
      <%= hidden_field_tag :rt_volunteer_subscribe_id, params[:rt_volunteer_subscribe_id] %>

  <div class="form-inputs">
    <div class="row well">
      <div class="col-md-12">
        <div class="row">
          <%= f.input :name, wrapper_html: { class: 'col-md-4' } %>
          <%= f.input :last_name, wrapper_html: { class: 'col-md-4' } %>
          <%= f.input :last_name_alt, wrapper_html: { class: 'col-md-4' } %>
        </div>
        <div class="row">
          <%= f.association :nationality, wrapper_html: { class: 'col-md-4' } %>
          <%= f.input :gender, wrapper_html: { class: 'col-md-4' } %>
          <%= f.input :birth_date, as: :string, input_html: date_input_html(f.object.birth_date), wrapper_html: { class: 'col-md-4' } %>
        </div>
      </div>
    </div>
    <div class="row well">
      <%= f.association :id_number_type, wrapper_html: { class: 'col-md-5' } %>
      <%= f.input :id_number, input_html: { class: 'vat_num', data: { mask: 'wwwwwwwww'} }, wrapper_html: { class: 'col-md-5' } %>
    </div>
    <div class="phone row well">
      <%= f.input :email, wrapper_html: { class: 'col-md-6' } %>
      <%= f.input :phone_number, input_html: { data: { mask: '999999999'} }, wrapper_html: { class: 'col-md-3' } %>
      <%= f.input :phone_number_alt, input_html: { data: { mask: '999999999'} }, wrapper_html: { class: 'col-md-3' } %>
    </div>
    <div class="row well">
      <%= f.association :profession, wrapper_html: { class: 'col-md-4' } %>
      <%= f.association :status, wrapper_html: { class: 'col-md-4' } %>
      <%= f.association :employment_status, wrapper_html: { class: 'col-md-4' } %>
    </div>
    <div class="row well">
      <%= f.association :academic_level, wrapper_html: { class: 'col-md-6' } %>
      <%= f.input :other_academic_info, wrapper_html: { class: 'col-md-6' } %>
    </div>
    <div class="row well">
      <%= f.input :available, input_html: {onClick: 'setAvailDate()'}, wrapper_html: { class: 'col-md-6' } %>
      <%= f.input :availability_date, as: :string, input_html: date_input_html(f.object.availability_date), wrapper_html: { class: 'col-md-6' } %>
    </div>
    <div class="row well">
      <%= content_tag :h3, Degree.model_name.human(count: 2), class: 'form-subtitle' %>
      <%= f.simple_fields_for :degrees, (f.object.degrees.build if f.object.new_record? && f.object.degrees.empty?) do |f_degrees|  %>
        <div class="timetable-fields well col-md-12">
          <div class="row">
              <%= f_degrees.association :degree_type, wrapper_html: { class: 'col-md-6' },
                                                      input_html: { onchange: 'filterDegree(this.id);' }%>
              <div class='col-md-6'>
                <%= label_tag Degree.human_attribute_name(:name), nil, class: 'col-sm-5 control-label select required' %>
                <div class='col-sm-7'>
                  <%= f_degrees.select :name, Degree.filter_by_degree_type(f_degrees.object.degree_type_id),
                                              {}, { class: 'form-control' } %>
                </div>
              </div>
              <%= f_degrees.link_to_remove build_icon('trash-o', text: "#{Degree.model_name.human}"), class: 'pull-right' %>
          </div> <!-- timetable-fields -->
        </div>
      <% end %>
      <p><%= f.link_to_add icon_new(text: "#{Degree.model_name.human}"), :degrees, class: 'btn' %></p>
    </div>
    <div class="row well">
      <%= content_tag :h3, Volun::Availability.model_name.human(count: 2), class: 'form-subtitle' %>
      <%= f.simple_fields_for :availabilities, (f.object.availabilities.build if f.object.new_record? && f.object.availabilities.empty?) do |f_availabilities|  %>
        <div class="timetable-fields well col-md-12">
          <div class="row">
              <%= f_availabilities.input :day, wrapper_html: { class: 'col-md-4' } %>
              <%= f_availabilities.input :start_hour, input_html: { class: 'm-width70', data: { mask: '99:99'} }, wrapper_html: { class: 'col-md-4' } %>
              <%= f_availabilities.input :end_hour, input_html: { class: 'm-width70', data: { mask: '99:99'} }, wrapper_html: { class: 'col-md-4' } %>
              <%= f_availabilities.link_to_remove build_icon('trash-o', text: "#{Volun::Availability.model_name.human}"), class: 'pull-right' %>
          </div> <!-- timetable-fields -->
        </div>
      <% end %>
      <p><%= f.link_to_add icon_new(text: "#{Volun::Availability.model_name.human}"), :availabilities, class: 'btn' %></p>
    </div>
    <div class="row well">
      <%= f.input :agreement, input_html: {onClick: 'setAgrmtDate()'}, wrapper_html: { class: 'col-md-6' } %>
      <%= f.input :agreement_date, as: :string, input_html: date_input_html(f.object.agreement_date), wrapper_html: { class: 'col-md-6' } %>
    </div>
    <div class="row well">
      <%= f.input :vocne, wrapper_html: { class: 'col-md-3' } %>
      <%= f.input :search_authorization, wrapper_html: { class: 'col-md-3' } %>
      <%= f.input :representative_statement, wrapper_html: { class: 'col-md-3' } %>
      <%= f.input :has_driving_license, wrapper_html: { class: 'col-md-3' } %>
    </div>
    <% unless f.object.new_record? %>
        <div class="row well">
          <%= f.input :subscribe_date, as: :string, input_html: date_input_html(f.object.subscribe_date), wrapper_html: { class: 'col-md-4' } %>
          <%= f.input :unsubscribe_date, as: :string, input_html: date_input_html(f.object.unsubscribe_date), wrapper_html: { class: 'col-md-4' } %>
          <%= f.association :unsubscribe_reason, wrapper_html: { class: 'col-md-4' } %>
        </div>
    <% end %>
    <div class="row well">
      <%= f.input :comments, wrapper_html: { class: 'col-md-6' } %>
      <%= f.input :expectations, wrapper_html: { class: 'col-md-6' } %>
    </div>
    <div class="row">
      <div class="well col-md-12">
        <%= content_tag :h3, Skill.model_name.human(count: 2), class: 'form-subtitle' %>
        <%= f.association :skills, as: :check_boxes, label: false, item_wrapper_class: 'checkbox-inline checkbox-custom' %>
      </div>
    </div>
<!-- Intermediate table needs project_id and assessment_id, not possible to associate yet
    <div class="row">
      <div class="well col-md-12">
        <%= content_tag :h3, Trait.model_name.human(count: 2), class: 'form-subtitle' %>
        <%= f.association :traits, as: :check_boxes, label: false, item_wrapper_class: 'checkbox-inline checkbox-custom' %>
      </div>
    </div>
-->
    <div class="row well">
      <%= content_tag :h3, Address.model_name.human, class: 'form-subtitle' %>
      <%= f.simple_fields_for :address, (f.object.address.presence || f.object.build_address) do |f_address|  %>
          <%= render partial: 'addresses/form_fields', locals: { f: f_address } %>
      <% end %>
    </div>
    <% if f.object.review? && @volunteer.persisted? %>
      <%= f.input :review, as: :hidden, input_html: { id: 'review' } %>
      <div class="row well">
        <%= content_tag :h3, t('errors_title_volun'), class: 'form-subtitle' %>
        <% if f.object.error_address %>
          <div class='row'>
            <%= f.input :error_address, wrapper_html: { class: 'col-md-6' } %>
            <div class='col-md-6'>
              <%= check_box_tag('rev_add', t('revised'), false) %>
              <label style='font-weight: normal;'>
                <%= t('revised') %>
              </label>
            </div>
          </div>
        <% end %>
        <% if f.object.error_other %>
          <div class='row'>
          <%= f.input :error_other, wrapper_html: { class: 'col-md-6' } %>
            <div class='col-md-6'>
              <%= check_box_tag('rev_oth', t('revised'), false) %>
              <label style='font-weight: normal;'>
                <%= t('revised') %>
              </label>
            </div>
          </div>
        <% end %>
      </div>
    <% end %>


    <div class="row">
      <% if @volunteer.persisted? && f.object.reload.projects.any? %>
        <div class="well col-md-12">
          <%= content_tag :h3, t('associated_projects'), class: 'form-subtitle' %>
          <div class="with-scroll-bar">
            <%= f.association :projects, as: :check_boxes, collection: f.object.projects, label: false, item_wrapper_class: 'checkbox-inline checkbox-custom' %>
          </div>
          <table class="index-table">
            <thead>
              <tr>
                <th><%= Project.human_attribute_name(:name) %></th>
                <th><%= Project.human_attribute_name(:description) %></th>
                <th><%= t('actions') %></th>
              </tr>
            </thead>
            <tbody>
              <% f.object.projects.each do |project| %>
                  <tr>
                    <td><%= project.name %></td>
                    <td><%= project.description %></td>
                    <td>
                      <%= link_to_show(project.pt_extendable || project) %>
                      <%= link_to_trackings(f.object, "volun", project) %>
                    </td>
                  </tr>
              <% end %>
            </tbody>
          </table>
        </div>
      <% end %>
      <div class="well col-md-12">
        <%= content_tag :h3, t('not_associated_projects'), class: 'form-subtitle' %>
        <% if f.object.projects.any? %>
          <%= f.association :projects, as: :select, collection: f.object.unassociated_projects, as: :select, label: false, item_wrapper_class: 'checkbox-inline checkbox-custom' %>
        <% else %>
          <%= f.association :projects, as: :select, label: false, item_wrapper_class: 'checkbox-inline checkbox-custom' %>
        <% end %>
      </div>
    </div>
  </div>

  <div class="form-actions">
    <% if f.object.review? && @volunteer.persisted? %>
      <input type="hidden" value="<%= t('messages.confirm_revised_all_volunteer') %>" id="reviseAllMsg" />
      <input type="hidden" value="<%= t('messages.confirm_revised_volunteer') %>" id="reviseMsg" />
    <% end %>
    <%= f.button :submit, class: 'btn btn-success js-confirmable', id: 'submit' %>
    <%= link_to build_icon('repeat', text: t('messages.undo_changes')), '', class: 'undo js-reloadable' %>
  </div>
    <% if f.object.review? && @volunteer.persisted? %>
      <script>
        // These validations have effect only if review is 1
        // Submit check specific revisions
        var reviseAllMsg = $("#reviseAllMsg").val();
        var reviseMsg = $("#reviseMsg").val();
        var confirm_submit = function () {
          $('.js-confirmable').closest('form').submit(function() {
              if ($("#rev_add").is(':checked') && $("#rev_oth").is(':checked')) {
                var c = confirm(reviseAllMsg);
                $("#review").val(0);
                return c;
              } else {
                var c = confirm(reviseMsg);
                return c;
              }
          });
        };
      </script>
    <% end %>
  <% end %>
</div>

<script>

    // Check date fields one time at rendering;
    setAvailDate();
    setAgrmtDate();
    
    // Select2 jQuery for degrees filtering
    function filterDegree(degreeTypeId) {
      degreeId = degreeTypeId.split("_degree_type_id")[0] + "_name";
      dt_id = $("#" + degreeTypeId + " option:selected").val();
      $.ajax({
        url: "/volunteers",
        dataType: 'json',
        data: {
            dt_id: dt_id
        },
        success: function (data) {
          $("#"+degreeId).empty();
          data.forEach(function(element) {
            $("#"+degreeId).append("<option value='" + element.name + "'>" + element.name + "</option>");
          });
          return {results: data};
        }
      });
    }

    // Disable availability_date if available check is checked
    function setAvailDate() {
      if ($("#volunteer_available").prop("checked")) {
        $("#volunteer_availability_date").attr("disabled", true);
        $("#volunteer_availability_date").val("");
      } else {
        $("#volunteer_availability_date").attr("disabled", false);
      }
    }

    // Disable agreement_date if available check is checked
    function setAgrmtDate() {
      if (!$("#volunteer_agreement").prop("checked")) {
        $("#volunteer_agreement_date").attr("disabled", true);
        $("#volunteer_agreement_date").val("");
      } else {
        $("#volunteer_agreement_date").attr("disabled", false);
      }
    }

</script>